<?xml version="1.0"?>
<robot name="atvurdf">

  
  <!-- ********************** ROBOT BASE *********************************  -->
  <link name="base_link">
    <visual>
      <origin xyz="0.05 0 0.05" />
      <geometry>
        <mesh filename="file://$(find atvurdf)/meshes/rigid_body.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0.05 0 0.05" />
      <geometry>
        <mesh filename="file://$(find atvurdf)/meshes/rigid_body.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="30"/>
      <inertia ixx="1.0" ixy="1.0" ixz="1.0" iyy="1.0" iyz="1.0" izz="1.0"/>
    </inertial>
  </link>

  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  
  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
  <!-- Define the center of the main robot chassis projected on the ground -->	
  <link name="base_footprint">
  	<inertial>
      <mass value="10"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
  </inertial>
  </link>

  <!-- The base footprint of the robot is located underneath the chassis -->
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
  </joint>

  <!-- *********************** DRIVE WHEEL BACK RIGHT ******************************  -->
    <link name="drivewhl_b_r_link">
      <visual>
        <origin xyz="0 0 0"/>
        <geometry>
          <mesh filename="file://$(find atvurdf)/meshes/rigid_right_front_wheels.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 0 0"/> 
        <geometry>
          <mesh filename="file://$(find atvurdf)/meshes/rigid_right_front_wheels.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="10"/>
        <inertia ixx="0.0125" ixy="0.0" ixz="0.0" iyy="0.0125" iyz="0.0" izz="0.05"/>
      </inertial>
    </link>
    <gazebo reference="drivewhl_b_r_link">
      <material>Gazebo/Black</material>
      <mu1>1.6</mu1>
      <mu2>1.6</mu2>
    </gazebo>

    <joint name="drivewhl_b_r_joint" type="continuous">
      <parent link="base_link"/>
      <child link="drivewhl_b_r_link"/>
      <origin xyz="-0.75 -0.43600000000000005 -0.425" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>


    <!-- *********************** DRIVE WHEEL BACK LEFT ******************************  -->
    <link name="drivewhl_b_l_link">
      <visual>
        <origin xyz="0 0 0"/>
        <geometry>
          <mesh filename="file://$(find atvurdf)/meshes/rigid_left_front_wheel.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.0 0.0 0.0 0.8"/>
        </material>
      </visual>

      <collision>
        <origin xyz="0 0 0"/> 
        <geometry>
          <mesh filename="file://$(find atvurdf)/meshes/rigid_left_front_wheel.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="10"/>
        <inertia ixx="0.0125" ixy="0.0" ixz="0.0" iyy="0.0125" iyz="0.0" izz="0.05"/>
      </inertial>
    </link>
    <gazebo reference="drivewhl_b_l_link">
      <material>Gazebo/Black</material>
      <mu1>1.6</mu1>
      <mu2>1.6</mu2>
    </gazebo>

    <joint name="drivewhl_b_l_joint" type="continuous">
      <parent link="base_link"/>
      <child link="drivewhl_b_l_link"/>
      <origin xyz="-0.75 0.43600000000000005 -0.425" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

      <!-- *********************** DRIVE WHEEL FRONT RIGHT ******************************  -->
    <link name="drivewhl_f_r_link">
      <visual>
        <origin xyz="0 0 0"/>
        <geometry>
          <mesh filename="file://$(find atvurdf)/meshes/rigid_right_front_wheels.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.0 0.0 0.0 0.5"/>
        </material>
      </visual>

      <collision>
        <origin xyz="0 0 0"/> 
        <geometry>
          <mesh filename="file://$(find atvurdf)/meshes/rigid_right_front_wheels.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="10"/>
        <inertia ixx="0.0125" ixy="0.0" ixz="0.0" iyy="0.0125" iyz="0.0" izz="0.05"/>
      </inertial>
    </link>

    <gazebo reference="drivewhl_f_r_link">
      <material>Gazebo/Black</material>
      <mu1>1.6</mu1>
      <mu2>1.6</mu2>
    </gazebo>

    <joint name="drivewhl_f_r_joint" type="continuous">
      <parent link="base_link"/>
      <child link="drivewhl_f_r_link"/>
      <origin xyz="0.75 -0.43600000000000005 -0.425" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>


        <!-- *********************** DRIVE WHEEL FRONT LEFT ******************************  -->
    <link name="drivewhl_f_l_link">
      <visual>
        <origin xyz="0 0 0"/>
        <geometry>
          <mesh filename="file://$(find atvurdf)/meshes/rigid_left_front_wheel.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.0 0.0 0.0 0.8"/>
        </material>
      </visual>

      <collision>
        <origin xyz="0 0 0"/> 
        <geometry>
          <mesh filename="file://$(find atvurdf)/meshes/rigid_left_front_wheel.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="10"/>
        <inertia ixx="0.0125" ixy="0.0" ixz="0.0" iyy="0.0125" iyz="0.0" izz="0.05"/>
      </inertial>
    </link>
    <gazebo reference="drivewhl_f_l_link">
      <material>Gazebo/Black</material>
      <mu1>1.6</mu1>
      <mu2>1.6</mu2>
    </gazebo>

    <joint name="drivewhl_f_l_joint" type="continuous">
      <parent link="base_link"/>
      <child link="drivewhl_f_l_link"/>
      <origin xyz="0.75 0.43600000000000005 -0.425" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

 <!--********************** LASER SCAN *****************************************************  -->

   <link name="lidar_link">
    <inertial>
      <origin xyz="0 0 1" rpy="0 0 0"/>
      <mass value="0.125"/>
      <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
    </inertial>
 
    <collision>
      <origin xyz="0.835 0.02 0.44" rpy="0 0 0"/>
      <geometry>
         <cylinder radius="0.0" length="0.0"/>
      </geometry>
    </collision>
 
    <visual>
      <origin xyz="0.835 0.02 0.44" rpy="0 0 0"/>
      <geometry>
         <cylinder radius="0.0" length="0.0"/>
      </geometry>
    </visual>
  </link>
     
  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.835 0.02 0.44" rpy="0 0 0"/>
  </joint>
     
  <gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
      <origin xyz="0.0 1.0 0.0" rpy="0 0 0"/>
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>120</samples>
            <resolution>1.000000</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.4</min>
          <max>20.0</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="lidar_link">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <material>Gazebo/Black</material>
  </gazebo>


  <!--****************************VLP16***************************  -->
    <link name="velodyne">
      <inertial>
        <pose>0 0 0 0 0 0 </pose>
        <mass value="0.125"/>
        <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
      </inertial>
  
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.0516" length="0.0717"/>
        </geometry>
      </collision>
  
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <mesh filename="file://$(find atvurdf)/meshes/VLP16_base_1.dae" scale="1 1 1"/>
        </geometry>
      </visual>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <mesh filename="file://$(find atvurdf)/meshes/VLP16_base_2.dae" scale="1 1 1"/>
        </geometry>
      </visual>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <mesh filename="file://$(find atvurdf)/meshes/VLP16_scan.dae" scale="1 1 1"/>
        </geometry>
      </visual> 
    </link>

    <gazebo reference="velodyne">
      <sensor type="ray" name="VLP16">
        <pose>0 0 0 0 0 0</pose>
        <update_rate>10</update_rate>
        <always_on>true</always_on>
        <visualize>false</visualize>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1</resolution>
              <min_angle>-3.14159</min_angle>
              <max_angle>3.14159</max_angle>
            </horizontal>
            <vertical>
              <samples>16</samples>
              <resolution>1</resolution>
              <min_angle>-3.14159</min_angle>
              <max_angle>3.14159</max_angle>
            </vertical>
          </scan>
          <range>
            <min>1.5</min>
            <max>140.0</max>
            <resolution>0.001</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.0</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
          <ros>
            <remapping>~/out:=points_raw</remapping>
          </ros>
          <frame_name>velodyne</frame_name>
          <min_range>1.0</min_range>
          <max_range>140.0</max_range>
          <gaussian_noise>0.001</gaussian_noise>
        </plugin>
      </sensor>
    </gazebo>


    <joint name="velodyne_joint" type="fixed">
      <parent link="base_link"/>
      <child link="velodyne"/>
      <origin xyz="0.835 0.02 0.44" rpy="0 0 0"/>
    </joint>


    <gazebo>
        <plugin name="skid_steer_drive" filename="libgazebo_ros_diff_drive.so">
        
        <!-- wheels -->
        <num_wheel_pairs>2</num_wheel_pairs>
        <left_joint>drivewhl_f_l_joint</left_joint>
        <left_joint>drivewhl_b_l_joint</left_joint>
        <right_joint>drivewhl_f_r_joint</right_joint>
        <right_joint>drivewhl_b_r_joint</right_joint>

        <!-- kinematics -->
        <wheel_separation>0.914</wheel_separation>
        <wheel_diameter>0.694622</wheel_diameter>
        <max_wheel_torque>20.0</max_wheel_torque>
        <max_wheel_acceleration>10.0</max_wheel_acceleration>

        <wheel_separation>0.914</wheel_separation>
        <wheel_diameter>0.694622</wheel_diameter>
        <max_wheel_torque>100.0</max_wheel_torque>
        <max_wheel_acceleration>10.0</max_wheel_acceleration>

        <!-- odometry  --> 
        <odometry_frame>odom</odometry_frame>
        <robot_base_frame>base_footprint</robot_base_frame>

        <!-- topic & re remappings -->
        <ros>
            <namespace>/</namespace>
            <argument>/cmd_vel:=cmd_vel</argument>
            <argument>/odom:=odom</argument>
        </ros>

        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>
        <update_rate>100.0</update_rate>
        </plugin>
    </gazebo>


  <!--****************************IMU***************************  -->

  <link name="imu_link">
      <inertial>
        <origin xyz="0 0 1" rpy="0 0 0"/>
        <mass value="0.125"/>
        <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
      </inertial>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.0" length="0.0"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.0" length="0.0"/>
        </geometry>
      </visual>
    </link>
        
    <gazebo reference="imu_link">
      <sensor name="br_imu" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="bytes_imu" filename="libgazebo_ros_imu_sensor.so">
            <ros>
                <namespace>imu</namespace>
                <remapping>~/out:=data</remapping>
            </ros>
            <initial_orientation_as_reference>false</initial_orientation_as_reference>
        </plugin>
      </sensor>
    </gazebo>

    <joint name="imu_joint" type="fixed">
      <parent link="base_link"/>
      <child link="imu_link"/>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
    </joint>
  <!--****************************Joint State Publisher***************************  -->

  <gazebo>
    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <!-- <namespace>/br</namespace> -->
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>drivewhl_f_r_joint</joint_name>
      <joint_name>drivewhl_f_l_joint</joint_name>
      <joint_name>drivewhl_b_r_joint</joint_name>
      <joint_name>drivewhl_b_l_joint</joint_name>
    </plugin>
  </gazebo>
  <!--****************************GPS***************************  -->

  <link name="gps_link">
      <collision>
        <origin xyz="0 0 0.1" rpy="0 0 0"/>
        <geometry>
          <box size="0.2 0.2 0.2"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0.1" rpy="0 0 0"/>
        <geometry>
          <box size="0.2 0.2 0.2"/>
        </geometry>
        <material name="orange"/>
      </visual>

      <inertial>
        <origin xyz="0 0 1" rpy="0 0 0"/>
        <mass value="1"/>
        <inertia
          ixx="1.0" ixy="0.0" ixz="0.0"
          iyy="1.0" iyz="0.0"
          izz="1.0"/>
      </inertial>
  </link>
    
    
  <material name="orange">
    <color rgba="${255/255} ${108/255} ${10/255} 1.0"/>
  </material>
  <gazebo reference="gps_link">
    <material>Gazebo/Orange</material>
  </gazebo>
    
    
  <joint name="gps_joint" type="fixed">
    <parent link="base_link"/> <!-- ?? -->
    <child link="gps_link"/>
    <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
  </joint>

    
  <gazebo reference="gps_link">
    <sensor name="gps" type="gps">
      <!-- ensure the sensor is active (required) -->
      <always_on>true</always_on>
      <update_rate>5</update_rate>
      <gps>
        <position_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </vertical>
        </position_sensing>
      </gps>
      <plugin name="gps_plugin" filename="libgazebo_ros_gps_sensor.so">
        <ros>
          <!-- publish to /gps/data -->
          <namespace>/gps</namespace>
          <remapping>~/out:=data</remapping>
        </ros>
      </plugin>
    </sensor>
  </gazebo>




</robot>


