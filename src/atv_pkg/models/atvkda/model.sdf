<?xml version="1.0" ?>
<sdf version="1.6">
	<model name="atvkda">
		<pose>0 0 0.35 0 -0 0</pose>
		<link name="rigid_body">
			<self_collide>false</self_collide>
			<pose frame="">-0.5509772858698141 -0.35921503762573787 0.4691281110478071 0.0 -0.0 0.0</pose>
			<inertial>
				<pose frame="">0.0 0.0 0.0 0 0 0</pose>
				<mass>30</mass>
				<inertia>
					<ixx>1</ixx>
					<ixy>1</ixy>
					<ixz>1</ixz>
					<iyy>1</iyy>
					<iyz>1</iyz>
					<izz>1</izz>
				</inertia>
			</inertial>
			<collision name="rigid_body_collision">
				<geometry>
					<mesh>
						<uri>model://atvkda/meshes/CAD/rigid_body.stl</uri>
						<scale>0.001 0.001 0.001</scale>
					</mesh>
				</geometry>
			</collision>
			<visual name="rigid_body_visual">
				<geometry>
					<mesh>
						<uri>model://atvkda/meshes/CAD/rigid_body.stl</uri>
						<scale>0.001 0.001 0.001</scale>
					</mesh>
				</geometry>
				<material>
					<ambient>0.1 0.1 0.1 1</ambient>
					<diffuse>0.1 0.1 0.1 1</diffuse>
					<specular>1.5 1.5 1.5 1</specular>
					<emissive>0.05 0.05 0.05 1</emissive>
				</material>
			</visual>
		</link>
		<link name="rigid_left_front_wheel">
			<self_collide>false</self_collide>
			<pose frame="">0.149313570651654 0.10837677345109908 -0.0027835333140371534 0.0 -0.0 0.0</pose>
			<inertial>
				<pose frame="">0.0 0.0 0.0 0 0 0</pose>
				<mass>1</mass>
				<inertia>
					<ixx>0.3</ixx>
					<ixy>0</ixy>
					<ixz>0</ixz>
					<iyy>0.3</iyy>
					<iyz>0</iyz>
					<izz>0.6</izz>
				</inertia>
			</inertial>
			<collision name="rigid_left_front_wheel_collision">
				<geometry>
					<mesh>
						<uri>model://atvkda/meshes/CAD/rigid_left_front_wheel.stl</uri>
						<scale>0.001 0.001 0.001</scale>
					</mesh>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>1</mu>
							<mu2>1</mu2>
							<slip1>0</slip1>
							<slip2>0</slip2>
						</ode>
					</friction>
					<contact>
						<ode>
							<soft_cfm>0</soft_cfm>
							<soft_erp>0.2</soft_erp>
							<kp>1e+13</kp>
							<kd>1</kd>
							<max_vel>0.01</max_vel>
							<min_depth>0.01</min_depth>
						</ode>
					</contact>
				</surface>
			</collision>
			<visual name="rigid_left_front_wheel_visual">
				<geometry>
					<mesh>
						<uri>model://atvkda/meshes/CAD/rigid_left_front_wheel.stl</uri>
						<scale>0.001 0.001 0.001</scale>
					</mesh>
				</geometry>
				<material>
					<ambient>0.01 0.01 0.01 1</ambient>
					<diffuse>0.1 0.1 0.1 1</diffuse>
					<specular>1.5 1.5 1.5 1</specular>
					<emissive>0.001 0.001 0.001 1</emissive>
				</material>
			</visual>
		</link>
		<link name="rigid_right_front_wheels">
			<self_collide>false</self_collide>
			<pose frame="">0.14931385014328322 -0.7921332073751959 -0.0027817838858620993 0.0 -0.0 0.0</pose>
			<inertial>
				<pose frame="">0.0 0.0 0.0 0 0 0</pose>
				<mass>1</mass>
				<inertia>
					<ixx>0.3</ixx>
					<ixy>0</ixy>
					<ixz>0</ixz>
					<iyy>0.3</iyy>
					<iyz>0</iyz>
					<izz>0.6</izz>
				</inertia>
			</inertial>
			<collision name="rigid_right_front_wheels_collision">
				<geometry>
					<mesh>
						<uri>model://atvkda/meshes/CAD/rigid_right_front_wheels.stl</uri>
						<scale>0.001 0.001 0.001</scale>
					</mesh>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>1</mu>
							<mu2>1</mu2>
							<slip1>0</slip1>
							<slip2>0</slip2>
						</ode>
					</friction>
					<contact>
						<ode>
							<soft_cfm>0</soft_cfm>
							<soft_erp>0.2</soft_erp>
							<kp>1e+13</kp>
							<kd>1</kd>
							<max_vel>0.01</max_vel>
							<min_depth>0.01</min_depth>
						</ode>
					</contact>
				</surface>
			</collision>
			<visual name="rigid_right_front_wheels_visual">
				<geometry>
					<mesh>
						<uri>model://atvkda/meshes/CAD/rigid_right_front_wheels.stl</uri>
						<scale>0.001 0.001 0.001</scale>
					</mesh>
				</geometry>
				<material>
					<ambient>0.01 0.01 0.01 1</ambient>
					<diffuse>0.1 0.1 0.1 1</diffuse>
					<specular>1.5 1.5 1.5 1</specular>
					<emissive>0.001 0.001 0.001 1</emissive>
				</material>
			</visual>
		</link>
		<link name="rigid_left_back_wheel">
			<self_collide>false</self_collide>
			<pose frame="">-1.3496864291871955 0.10837677345106926 -0.0033596523819218326 0.0 -0.0 0.0</pose>
			<inertial>
				<pose frame="">0.0 0.0 0.0 0 0 0</pose>
				<mass>1</mass>
				<inertia>
					<ixx>0.3</ixx>
					<ixy>0</ixy>
					<ixz>0</ixz>
					<iyy>0.3</iyy>
					<iyz>0</iyz>
					<izz>0.6</izz>
				</inertia>
			</inertial>
			<collision name="rigid_left_back_wheel_collision">
				<geometry>
					<mesh>
						<uri>model://atvkda/meshes/CAD/rigid_left_back_wheel.stl</uri>
						<scale>0.001 0.001 0.001</scale>
					</mesh>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>1</mu>
							<mu2>1</mu2>
							<slip1>0</slip1>
							<slip2>0</slip2>
						</ode>
					</friction>
					<contact>
						<ode>
							<soft_cfm>0</soft_cfm>
							<soft_erp>0.2</soft_erp>
							<kp>1e+13</kp>
							<kd>1</kd>
							<max_vel>0.01</max_vel>
							<min_depth>0.01</min_depth>
						</ode>
					</contact>
				</surface>
			</collision>
			<visual name="rigid_left_back_wheel_visual">
				<geometry>
					<mesh>
						<uri>model://atvkda/meshes/CAD/rigid_left_back_wheel.stl</uri>
						<scale>0.001 0.001 0.001</scale>
					</mesh>
				</geometry>
				<material>
					<ambient>0.01 0.01 0.01 1</ambient>
					<diffuse>0.1 0.1 0.1 1</diffuse>
					<specular>1.5 1.5 1.5 1</specular>
					<emissive>0.001 0.001 0.001 1</emissive>
				</material>
			</visual>
		</link>
		<link name="rigid_right_back_wheel">
			<self_collide>false</self_collide>
			<pose frame="">-1.3496861498881583 -0.792133207375183 -0.003357902953795265 0.0 -0.0 0.0</pose>
			<inertial>
				<pose frame="">0.0 0.0 0.0 0 0 0</pose>
				<mass>1</mass>
				<inertia>
					<ixx>0.3</ixx>
					<ixy>0</ixy>
					<ixz>0</ixz>
					<iyy>0.3</iyy>
					<iyz>0</iyz>
					<izz>0.6</izz>
				</inertia>
			</inertial>
			<collision name="rigid_right_back_wheel_collision">
				<geometry>
					<mesh>
						<uri>model://atvkda/meshes/CAD/rigid_right_back_wheel.stl</uri>
						<scale>0.001 0.001 0.001</scale>
					</mesh>
				</geometry>
				<surface>
					<friction>
						<ode>
							<mu>1</mu>
							<mu2>1</mu2>
							<slip1>0</slip1>
							<slip2>0</slip2>
						</ode>
					</friction>
					<contact>
						<ode>
							<soft_cfm>0</soft_cfm>
							<soft_erp>0.2</soft_erp>
							<kp>1e+13</kp>
							<kd>1</kd>
							<max_vel>0.01</max_vel>
							<min_depth>0.01</min_depth>
						</ode>
					</contact>
				</surface>
			</collision>
			<visual name="rigid_right_back_wheel_visual">
				<geometry>
					<mesh>
						<uri>model://atvkda/meshes/CAD/rigid_right_back_wheel.stl</uri>
						<scale>0.001 0.001 0.001</scale>
					</mesh>
				</geometry>
				<material>
					<ambient>0.01 0.01 0.01 1</ambient>
					<diffuse>0.1 0.1 0.1 1</diffuse>
					<specular>1.5 1.5 1.5 1</specular>
					<emissive>0.001 0.001 0.001 1</emissive>
				</material>
			</visual>
		</link>


						<!-- ****************************** LIDAR *****************************    -->
		<link name='velodyne'>
			<pose frame=''>0.235 -0.34 0.85933 0 0 0</pose>
			<inertial>
				<pose frame=''>0 0 0 0 0 0</pose>
				<mass>0.2</mass>
				<inertia>
					<ixx>3.23643</ixx>
					<ixy>0.0156863</ixy>
					<ixz>0.065702</ixz>
					<iyy>3.35996</iyy>
					<iyz>-0.00821275</iyz>
					<izz>3.32745</izz>
				</inertia>
			</inertial>
			<collision name='base_footprint_collision_1'>
				<pose frame=''>0 0 0 0 0 0</pose>
				<geometry>
					<cylinder>
						<length>0.0717</length>
						<radius>0.0516</radius>
					</cylinder>
				</geometry>
				<surface>
					<contact>
					<ode/>
					</contact>
					<friction>
					<ode/>
					<torsional>
						<ode/>
					</torsional>
					</friction>
					<bounce/>
				</surface>
				<max_contacts>10</max_contacts>
			</collision>
			<visual name='base_footprint_visual_1'>
				<pose frame=''>0 0 0 0 0 0</pose>
				<geometry>
					<mesh>
					<scale>1 1 1</scale>
					<uri>model://velodyne_VLP16/meshes/VLP16_base_1.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
					<uri>__default__</uri>
					<name>__default__</name>
					</script>
				</material>
			</visual>
			<visual name='base_footprint_visual_2'>
				<pose frame=''>0 0 0 0 0 0</pose>
				<geometry>
					<mesh>
						<scale>1 1 1</scale>
						<uri>model://velodyne_VLP16/meshes/VLP16_base_2.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<uri>__default__</uri>
						<name>__default__</name>
					</script>
				</material>
			</visual>
			<visual name='base_footprint_visual_3'>
				<pose frame=''>0 0 0 0 0 0</pose>
				<geometry>
					<mesh>
						<scale>1 1 1</scale>
						<uri>model://velodyne_VLP16/meshes/VLP16_scan.dae</uri>
					</mesh>
				</geometry>
				<material>
					<script>
						<uri>__default__</uri>
						<name>__default__</name>
					</script>
				</material>
			</visual>
			<sensor name='velodyne-VLP16' type='ray'>
				<visualize>0</visualize>
				<update_rate>3</update_rate>
				<ray>
					<scan>
						<horizontal>
							<samples>100</samples>
							<resolution>1</resolution>
							<min_angle>-3.14159</min_angle>
							<max_angle>3.14159</max_angle>
						</horizontal>
						<vertical>
							<samples>16</samples>
							<resolution>1</resolution>
							<min_angle>-0.261799</min_angle>
							<max_angle>0.261799</max_angle>
						</vertical>
					</scan>
					<range>
						<min>0.055</min>
						<max>140</max>
						<resolution>0.001</resolution>
					</range>
					<noise>
						<type>gaussian</type>
						<mean>0</mean>
						<stddev>0</stddev>
					</noise>
				</ray>
				<plugin name='gazebo_ros_laser_controller' filename='libgazebo_ros_velodyne_laser.so'>
					<ros>
						<!-- Will publish to /imu/data -->
						<namespace></namespace>
						<argument>~/out:=velodyne_points</argument>
					</ros>
					<!-- <topic_name>/velodyne_points</topic_name>-->
					<frame_name>velodyne</frame_name>
					<min_range>0.9</min_range>
					<max_range>13</max_range>
					<gaussian_noise>0.008</gaussian_noise>
					<robotNamespace></robotNamespace>
					<organize_cloud>false</organize_cloud>
					
					<output_type>sensor_msgs/PointCloud</output_type> 
				</plugin>
				<pose frame=''>0 0 0 0 0 0</pose>
				<plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
     					 <ros>
        					<remapping>~/out:=scan</remapping>
      					</ros>
      					<output_type>sensor_msgs/LaserScan</output_type>
      					<frame_name>velodyne</frame_name>
    				</plugin>
			</sensor>
			<gravity>0</gravity>
			<self_collide>0</self_collide>
			<kinematic>0</kinematic>
		</link>
	<!-- ****************************** LIDAR END *****************************    -->

	<!-- ****************************** IMU *****************************    --> 
	
	 	<link name="imu">
			<pose frame=''>0.235 -0.34 0.95933 0 0 0</pose>
			<inertial>
				<!--<pose frame=''>0 0 0 0 0 0</pose>--> 
				<mass>0.1</mass>
			</inertial>
			<collision name="imu_collision">
				<pose frame=''>0 0 0 0 0 0 </pose>
				<geometry>
					<box>
						<size> 0.05 0.05 0.01 </size>
					</box>
				</geometry>
			</collision>
			<visual name="imu_visual">
				<geometry>
					<box>
						<size> 0.05 0.05 0.01 </size>
					</box>
				</geometry>
			</visual>
		
			<sensor name="my_imu" type="imu">
				<imu>
				<angular_velocity>
				<x>
					<noise type="gaussian">
					<mean>0.0</mean>
					<stddev>2e-4</stddev>
					<bias_mean>0.0000075</bias_mean>
					<bias_stddev>0.0000008</bias_stddev>
					</noise>
				</x>
				<y>
					<noise type="gaussian">
					<mean>0.0</mean>
					<stddev>2e-4</stddev>
					<bias_mean>0.0000075</bias_mean>
					<bias_stddev>0.0000008</bias_stddev>
					</noise>
				</y>
				<z>
					<noise type="gaussian">
					<mean>0.0</mean>
					<stddev>2e-4</stddev>
					<bias_mean>0.0000075</bias_mean>
					<bias_stddev>0.0000008</bias_stddev>
					</noise>
				</z>
				</angular_velocity>
				<linear_acceleration>
				<x>
					<noise type="gaussian">
					<mean>0.0</mean>
					<stddev>1.7e-2</stddev>
					<bias_mean>0.1</bias_mean>
					<bias_stddev>0.001</bias_stddev>
					</noise>
				</x>
				<y>
					<noise type="gaussian">
					<mean>0.0</mean>
					<stddev>1.7e-2</stddev>
					<bias_mean>0.1</bias_mean>
					<bias_stddev>0.001</bias_stddev>
					</noise>
				</y>
				<z>
					<noise type="gaussian">
					<mean>0.0</mean>
					<stddev>1.7e-2</stddev>
					<bias_mean>0.1</bias_mean>
					<bias_stddev>0.001</bias_stddev>
					</noise>
				</z>
				</linear_acceleration>
				</imu>
				<always_on>true</always_on>
				<!-- Publish at 30 hz -->
				<update_rate>3</update_rate>
				<plugin name="my_imu_plugin" filename="libgazebo_ros_imu_sensor.so">
					<ros>
						<!-- Will publish to /imu/data -->
						<namespace></namespace>
						<argument>~/out:=imu</argument>
					</ros>
				<!-- frame_name ommited, will be "my_link" -->
				</plugin>
			</sensor>
			<gravity>0</gravity>
			<self_collide>0</self_collide>
			<kinematic>0</kinematic>
		</link>  
		

	<!-- ****************************** IMU END*****************************    -->


	<!-- ****************************** Joints **********************************   -->
		<joint name="imu_joint" type="fixed">
    			<parent>rigid_body</parent>
    			<child>imu</child>
    			<pose>>0 0 0 0 0 0</pose>
  		</joint>

		<joint name="lidar_joint" type="fixed">
    			<parent>rigid_body</parent>
    			<child>velodyne</child>
    			<pose>>0 0 0 0 0 0</pose>
  		</joint>

		<joint name="rev_right_back_wheel" type="revolute">
			<parent>rigid_body</parent>
			<child>rigid_right_back_wheel</child>
			<pose frame="">0 0 0 0 0 0</pose>
			<axis>
				<xyz>0 1 0</xyz>
				<use_parent_model_frame>0</use_parent_model_frame>
			</axis>
		</joint>
		<joint name="rev_left_back_wheel" type="revolute">
			<parent>rigid_body</parent>
			<child>rigid_left_back_wheel</child>
			<pose frame="">0 0 0 0 0 0</pose>
			<axis>
				<xyz>0 1 0</xyz>
				<use_parent_model_frame>0</use_parent_model_frame>
			</axis>
		</joint>
		<joint name="rev_left_front_wheel" type="revolute">
			<parent>rigid_body</parent>
			<child>rigid_left_front_wheel</child>
			<pose frame="">0 0 0 0 0 0</pose>
			<axis>
				<xyz>0 1 0</xyz>
				<use_parent_model_frame>0</use_parent_model_frame>
			</axis>
		</joint>
		<joint name="rev_right_front_wheel" type="revolute">
			<parent>rigid_body</parent>
			<child>rigid_right_front_wheels</child>
			<pose frame="">0 0 0 0 0 0</pose>
			<axis>
				<xyz>0 1 0</xyz>
				<use_parent_model_frame>0</use_parent_model_frame>
			</axis>
		</joint>

	<!-- ****************************** Joints end**********************************   -->
	

		<!-- Controls the differential drive robot -->	  
		<plugin name='skid_steer_drive' filename='libgazebo_ros_diff_drive.so'>
			<ros>
				<!-- Set namespace -->
				<namespace>  </namespace>

				<!-- Remap default topics -->
				<!-- <argument>cmd_vel:=cmd_demo</argument>-->
				<!-- <argument>odom:=odom_demo</argument>-->
			</ros>

			<update_rate>30</update_rate>

			<!-- Number of wheel pairs -->
			<num_wheel_pairs> 2 </num_wheel_pairs>

			<!-- Front Wheels -->
			<left_joint>rev_left_front_wheel</left_joint>
			<right_joint>rev_right_front_wheel</right_joint>
			
			<wheel_separation>0.914</wheel_separation>
			<wheel_diameter>0.694622</wheel_diameter>

			<!-- Back Wheels -->
			<left_joint>rev_left_back_wheel</left_joint>
			<right_joint>rev_right_back_wheel</right_joint>
			
			<wheel_separation>0.914</wheel_separation>
			<wheel_diameter>0.694622</wheel_diameter>


		 	<!-- limits -->
		 	<max_wheel_torque>100</max_wheel_torque>
		 	<max_wheel_acceleration>40.0</max_wheel_acceleration>	
			
			<!-- output -->
			<publish_odom>true</publish_odom>
			<publish_odom_tf>true</publish_odom_tf>
			<publish_wheel_tf>true</publish_wheel_tf>
			
			<odometry_topic>odom</odometry_topic>
			<odometry_frame>odom</odometry_frame>
			<robot_base_frame>rigid_body</robot_base_frame>	
			
		</plugin>
	</model>
</sdf>
